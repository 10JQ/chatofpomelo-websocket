{
  "name": "muk",
  "description": "Mock object methods and dependencies.",
  "keywords": [
    "test",
    "mock",
    "dependency"
  ],
  "version": "0.2.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/fent/node-muk.git"
  },
  "author": {
    "name": "Roly Fentanes",
    "url": "https://github.com/fent"
  },
  "main": "./lib/index.js",
  "scripts": {
    "test": "mocha -R spec test/*-test.js"
  },
  "directories": {
    "lib": "./lib"
  },
  "devDependencies": {
    "mocha": "*"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/fent/node-muk/raw/master/LICENSE"
    }
  ],
  "readme": "# muk [![Build Status](https://secure.travis-ci.org/fent/node-muk.png)](http://travis-ci.org/fent/node-muk)\n\n\n# Usage\n\nMock an object's methods.\n\n```js\nvar fs = require('fs');\nvar muk = require('muk');\n\nmuk(fs, 'readFile', function(path, callback) {\n  process.nextTick(callback.bind(null, null, 'file contents here'));\n});\n```\n\nRestore all mocked methods after tests.\n\n```\nmuk.restore();\n\nfs.readFile(file, function(err, data) {\n  // will actually read from `file`\n});\n```\n\nMock dependencies too.\n\n**foo.js**\n```\nvar request = require('request');\n\nmodule.exports = function foo(url) {\n  // do something with request\n};\n```\n\n**test.js**\n```js\nvar mockedRequest = function(url, options, callback) {\n  // mock a request here\n};\n\nvar foo = muk('./foo', {\n  request: mockedRequest\n});\n```\n\nYou can also mock modules required with a relative path.\n\n**foo.js**\n```js\nvar bar = require('./bar');\n\nmodule.exports = function() {\n  // do something with bar\n};\n```\n\n**test.js**\n```js\nvar foo = muk('./foo', { './bar': 'hey!!' });\n```\n\n\n# Install\n\n    npm install muk\n\n\n# Tests\nTests are written with [mocha](http://visionmedia.github.com/mocha/)\n\n```bash\nnpm test\n```\n\n# License\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "muk@0.2.0",
  "_from": "muk@>=0.0.1"
}
